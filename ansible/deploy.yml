- name: Deploy React Tasklist to AWS EC2
  hosts: tasklist_server
  become: yes
  vars:
    app_dir: /var/www/tasklist
    app_user: straumandi
    node_version: 20

  tasks:
    - name: Update dnf cache
      dnf:
        name: 
        - nodejs
        - npm
        state: present
        update_cache: yes

    - name: Install required packages
      dnf:
        name:
          - nodejs
          - npm
          - git
          - python3-pip
        state: present

    - name: Ensure app directory exists
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Ensure .ssh directory exists
      file:
        path: "/home/{{ app_user }}/.ssh"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0700'

    - name: Copy GitHub deploy key
      copy:
        content: "{{ lookup('env', 'REPO_DEPLOY_KEY') }}"
        dest: "/home/{{ app_user }}/.ssh/github_deploy_key"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0600'

    - name: Configure SSH for GitHub
      copy:
        dest: "/home/{{ app_user }}/.ssh/config"
        content: |
          Host github.com
            HostName github.com
            User git
            IdentityFile ~/.ssh/github_deploy_key
            StrictHostKeyChecking no
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0600'

    - name: Pull latest code from repository
      git:
        repo: "git@github.com:straumandi/armanious_schmatz.git"
        dest: "{{ app_dir }}"
        version: main
        force: yes
        accept_hostkey: yes
      become_user: "{{ app_user }}"

    - name: Install app dependencies
      npm:
        path: "{{ app_dir }}"
        ci: yes
      become_user: "{{ app_user }}"

    - name: Copy environment file
      copy:
        content: |
          NODE_ENV=production
          PORT=5173
        dest: "{{ app_dir }}/.env"
        owner: "{{ app_user }}"
        mode: '0600'

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes
        state: present

    - name: Start/restart application with PM2
      command: pm2 restart ecosystem.config.js --update-env
      args:
        chdir: "{{ app_dir }}"
      become_user: "{{ app_user }}"